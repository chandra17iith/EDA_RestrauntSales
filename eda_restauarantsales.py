# -*- coding: utf-8 -*-
"""EDA_restauarantSales.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/15AttYIAZmjxHSonOaP0qzTLE2ptcnzTa

Importing libraries
"""

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns

"""loading dataset"""

data=pd.read_csv('Balaji Fast Food Sales.csv')
data.head()
data.info()
data.describe()

"""# looking for missing and duplicate values"""

data.isnull().sum()

"""transcation type has 107 null values"""

data.duplicated().sum()

"""no duplicates are here

# Data cleaning and other amendment for analysis
"""

# filling the missing transaction_type with online
data['transaction_type']=data['transaction_type'].fillna('Online')

data['received_by']
# in this column we can replace it by gender for better idea
data['received_by'] = data['received_by'].replace(['Mr.','Mrs.'],['Male','Female'])
data['received_by']

data['date'] = data['date'].str.replace('/','-')
data['date']

data['date']=pd.to_datetime(data['date'])
data['date']

data.head()

"""# Analysing data

# Univariate analysis
"""

sns.set_style('whitegrid')
sns.histplot(data['transaction_amount'],bins=np.arange(0,1000,100),kde=True)
plt.title('Transaction Analysis')
plt.xlabel('transaction amount')
plt.ylabel('frequency')
plt.show()

"""we could clearly see that the maximum transaction amount has been done by people within 400 rupees since the frequency of transaction amount is high  """

itemsType_price=data.groupby('item_type')['item_price'].mean()
print(itemsType_price)

# first looking for the item type which is sold most
sorted_data1=data.groupby('item_type').agg({'quantity': 'sum', 'transaction_amount': 'sum'})
# this will tell which
Fastfood_type=data[data['item_type']=='Fastfood']
Beverages_type=data[data['item_type']=='Beverages']
Fastfood_data = Fastfood_type.groupby('item_name').agg({'quantity': 'sum', 'transaction_amount': 'sum'})
Beverages_data =Beverages_type.groupby('item_name').agg({'quantity': 'sum', 'transaction_amount': 'sum'})

item_price_fast=Fastfood_type.groupby('item_name')['item_price'].mean()
print(item_price_fast)

item_price_bev=Beverages_type.groupby('item_name')['item_price'].mean()
print(item_price_bev)

plt.bar(sorted_data1.index,sorted_data1['quantity'])
plt.title(' Total amount of order vs ItemType')
plt.xlabel('Item Type')
plt.ylabel('Quantity of Order')
plt.show()

plt.bar(sorted_data1.index,sorted_data1['transaction_amount'])
plt.title(' Revenue vs ItemType')
plt.xlabel('Item Type')
plt.ylabel('Revenue')
plt.show()

"""

*  we can see that major contributor in terms of quantity and earning is fastfood
*   Now we will check in fastfood which is the major contributor


"""

plt.bar(Fastfood_data .index,Fastfood_data['transaction_amount'])
plt.title(' Revenue vs FastFood')
plt.xlabel('FastFood')
plt.ylabel('Revenue')
plt.show()

plt.bar(Fastfood_data .index,Fastfood_data['quantity'])
plt.title('Quantity vs FastFood')
plt.xlabel('FastFood')
plt.ylabel('Quantity')
plt.show()

"""

*   From the above plots we could see that sandwich and frankie is contributing more in revenue snice its price is higher than other food
*   While panipuri, vadapav and aalopuri quantity is significant but the contribution in revenue is less due to low cost

"""

plt.bar(Beverages_data.index,Beverages_data['quantity'])
plt.title('Quantity vs Beverages')
plt.xlabel('Beverages')
plt.ylabel('Quantity')
plt.show()

plt.bar(Beverages_data.index,Beverages_data['transaction_amount'])
plt.title('Revenue vs Beverages')
plt.xlabel('Beverages')
plt.ylabel('Revenue')
plt.show()

"""we can see that cold coffee is contributing more in revenue while sugarcane contribution is less despite its high ordered quantity which could be due to low cost of sugarcane juice

#Time Based analysis

Analysing monthly revenue
"""

data['Year'] = data['date'].dt.year
data['Month'] = data['date'].dt.month

#Creating a 'Month-Year' column for easier analysis
data['Month-Year'] = data['date'].dt.to_period('M')
month_revenue=data.groupby('Month-Year')['transaction_amount'].sum().reset_index()
print(month_revenue)

plt.figure(figsize=(12,6))
plt.plot(month_revenue['Month-Year'].astype(str),month_revenue['transaction_amount'],'o-g')
plt.title('Monthly revenue')
plt.xlabel('Month')
plt.ylabel('Revenue')
plt.xticks(month_revenue['Month-Year'].astype(str), rotation=45)
plt.show()

"""Now we will be analysing each food and beverage over a time"""

# FastFood
Aalopuri_data=data[data['item_name']=='Aalopuri']
Aalopuri_data=Aalopuri_data.groupby('Month-Year')['transaction_amount'].sum().reset_index()

# print(Aalopuri_data)

Frankie_data=data[data['item_name']=='Frankie']
Frankie_data=Frankie_data.groupby('Month-Year')['transaction_amount'].sum().reset_index()

# print(Frankie_data)

Panipuri_data=data[data['item_name']=='Panipuri']
Panipuri_data=Panipuri_data.groupby('Month-Year')['transaction_amount'].sum().reset_index()
# print(Panipuri_data)

Sandwich_data=data[data['item_name']=='Sandwich']
Sandwich_data=Sandwich_data.groupby('Month-Year')['transaction_amount'].sum().reset_index()
# print(Sandwich_data)


Vadapav_data=data[data['item_name']=='Vadapav']
Vadapav_data=Vadapav_data.groupby('Month-Year')['transaction_amount'].sum().reset_index()
# print(Vadapav_data)

ColdCoffee_data=data[data['item_name']=='Cold coffee']
ColdCoffee_data=ColdCoffee_data.groupby('Month-Year')['transaction_amount'].sum().reset_index()
print(ColdCoffee_data)

sugarcane_data=data[data['item_name']=='Sugarcane juice']
sugarcane_data=sugarcane_data.groupby('Month-Year')['transaction_amount'].sum().reset_index()
print(sugarcane_data)

plt.figure(figsize=(20,6))
plt.plot(Vadapav_data['Month-Year'].astype(str),Vadapav_data.transaction_amount,'o-',label='Vadapav')
plt.plot(Sandwich_data['Month-Year'].astype(str),Sandwich_data.transaction_amount,'o-',label='Sandwich')
plt.plot(Panipuri_data['Month-Year'].astype(str),Panipuri_data.transaction_amount,'o-',label='Panipuri')
plt.plot(Aalopuri_data['Month-Year'].astype(str),Aalopuri_data.transaction_amount,'o-',label='Aalopuri')
plt.plot(Frankie_data['Month-Year'].astype(str),Frankie_data.transaction_amount,'o-',label='Frankie')
plt.xlabel('Month')
plt.ylabel('Revenue')
plt.xticks(month_revenue['Month-Year'].astype(str), rotation=45)
plt.title('Rvenue v/s Month')
plt.legend()
plt.show()

plt.figure(figsize=(20,6))
plt.plot(ColdCoffee_data['Month-Year'].astype(str),ColdCoffee_data.transaction_amount,'o-',label='Coldcoffee')
plt.plot(sugarcane_data['Month-Year'].astype(str),sugarcane_data.transaction_amount,'o-',label='Sugarcane Juice')
plt.xlabel('Month')
plt.ylabel('Revenue')
plt.xticks(month_revenue['Month-Year'].astype(str), rotation=45)
plt.title('Rvenue v/s Month')
plt.legend()
plt.show()

"""Analysing revenue and order quantity with what time of the day i.e morning,night,evening or night"""

shift_data=data.groupby('time_of_sale').agg({'quantity': 'sum', 'transaction_amount': 'sum'}).reset_index()
print(shift_data)

plt.pie(shift_data['transaction_amount'],labels=shift_data['time_of_sale'], autopct='%1.1f%%', startangle=90)
plt.title('Revenue Distribution over time of sale')
plt.show()

sales_data = data.groupby(['item_name', 'time_of_sale'])['transaction_amount'].sum().reset_index()
print(sales_data)

plt.figure(figsize=(12, 6))
sns.barplot(data=sales_data, x='time_of_sale', y='transaction_amount', hue='item_name')
plt.title('Sales of Food Items by Time of Sale')
plt.xlabel('Time of Sale (Category)')
plt.ylabel('Total Transaction Amount')
plt.legend(title='item_name')
plt.show()

"""Transaction Type Analysis"""

transaction_data=data.groupby('transaction_type')['transaction_amount'].sum().reset_index()
print(transaction_data)

plt.pie(transaction_data['transaction_amount'],labels=transaction_data['transaction_type'], autopct='%1.1f%%', startangle=90)
plt.title('payment type distribution')
plt.show()

"""Gender Type Analysis"""

gender_data=data.groupby('received_by')['transaction_amount'].sum().reset_index()
print(gender_data)

plt.pie(gender_data['transaction_amount'],labels=gender_data['received_by'], autopct='%1.1f%%', startangle=90)
plt.title('Sales distribution by Gender')
plt.show()